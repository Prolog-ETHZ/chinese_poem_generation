version: 1
disable_existing_loggers: False
formatters:
    # formatters is applied by handlers
    simple:
        format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

handlers:
    # four handlers, namely console info error warnings
    console:
        class: logging.StreamHandler
        level: INFO
        formatter: simple
        stream: ext://sys.stdout

    info_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: INFO
        formatter: simple
        filename: ./logs/info.log
        maxBytes: 10485760 # 10MB
        backupCount: 20
        encoding: utf8
    # Rotating File Handler can control the size of logs
    error_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: ERROR
        formatter: simple
        filename: ./logs/errors.log
        maxBytes: 10485760 # 10MB
        backupCount: 20
        encoding: utf8

    warning_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: WARNING
        formatter: simple
        filename: ./logs/warnings.log
        maxBytes: 10485760 # 10MB
        backupCount: 20
        encoding: utf8

    critial_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: CRITICAL
        formatter: simple
        filename: ./logs/critial.log
        maxBytes: 10485760 # 10MB
        backupCount: 20
        encoding: utf8

loggers:
    # define each logger by module name, if no match will go to root
    cust_logger:
        level: DEBUG
        # apply different handlers
        handlers: [console, warning_file_handler, error_file_handler]
        propagate: no

root:
    level: DEBUG
    handlers: [console, info_file_handler, error_file_handler, warning_file_handler, critial_file_handler]